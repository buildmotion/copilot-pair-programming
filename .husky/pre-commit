#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

echo "üîç Running pre-commit validation..."

# Test AI instruction compliance
if [ -f "./.github/scripts/test-copilot-instructions.sh" ]; then
    echo "Validating AI pattern instructions..."
    ./.github/scripts/test-copilot-instructions.sh
    if [ $? -ne 0 ]; then
        echo "‚ùå AI pattern instruction validation failed"
        exit 1
    fi
else
    echo "‚ö†Ô∏è  Instruction compliance test not found"
fi

# Check for antipatterns in staged markdown files
staged_md_files=$(git diff --cached --name-only --diff-filter=ACM | grep '\.md$' || true)
if [ -n "$staged_md_files" ]; then
    echo "Checking staged markdown files for antipatterns..."
    
    # Check each staged markdown file for antipatterns
    for file in $staged_md_files; do
        if [ -f "$file" ]; then
            # Create a temporary file to process content outside of code blocks
            temp_file=$(mktemp)
            
            # Remove code blocks (```...```) and inline code (`...`) from analysis
            # Also exclude lines with common documentation patterns
            sed '/```/,/```/d' "$file" | \
            sed 's/`[^`]*`//g' | \
            grep -v "grep\|echo\|# BEFORE\|# AFTER\|Example\|example\|command\|Command\|\*\*Example" > "$temp_file"
            
            # Look for antipatterns in the cleaned content
            violations=$(grep -n "isn't just\|not just\|more than just\|not merely" "$temp_file" | head -5)
            
            # Clean up temp file
            rm -f "$temp_file"
            
            if [ -n "$violations" ]; then
                echo "‚ùå Found antipattern in staged file: $file"
                echo "   Lines with expectation-subversion patterns:"
                echo "$violations"
                echo "   Please remove these patterns before committing"
                echo "   Note: Patterns in code blocks and examples are automatically excluded"
                exit 1
            fi
        fi
    done
    echo "‚úÖ No antipatterns found in staged files"
else
    echo "üìù No markdown files staged for commit"
fi

echo "‚úÖ Pre-commit validation passed"
